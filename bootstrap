#! /usr/bin/env sh

# at least on CentOS 6 the default autotools v2.63
# can't properly include local macros
# instead of autoreconf -i, execute the commands below:

check_requirement () {
  local readonly REQUIREMENT="${1}"
  local RESULT=0

  if test "x$(command -v ${REQUIREMENT})" = "x"
  then
    echo "missing requirement: ${REQUIREMENT}"
    RESULT=1
  fi

  return ${RESULT}
}

requirements () {
  local RESULT=0
  check_requirement aclocal || RESULT=1
  check_requirement automake || RESULT=1
  check_requirement autoconf || RESULT=1

  if test "x${RESULT}" = "x1"
  then
    cat << EOF
some requirements are missing
consider installing them from your package manager
or compile them from source and add to PATH

packages on debian or ubuntu can be installed with:
sudo apt-get install autoconf automake

autoconf sources can be obtained from:
https://gnu.org/software/autoconf
automake sources can be obtained from:
https://gnu.org/software/automake

EOF
    exit 1
  fi
}

generate () {
  aclocal -I m4 2>&1
  automake -a -c 2>&1
  autoconf -I m4 2>&1
} > bootstrap.log
# the line above is a function output redirection, POSIX approved

clean () {
  local readonly FILES=" \
    aclocal.m4 \
    autom4te.cache \
    bootstrap.log \
    compile \
    components \
    config.guess \
    config.log \
    config.status \
    config.sub \
    configure \
    install-sh \
    localroot \
    Makefile.in \
    Makefile \
    missing \
    outputroot \
    tarballs \
    tools \
  "
  rm -rf ${FILES}
}

help () {
  cat << EOF
Usage: bootstrap [-c] [-h]
  Prepare project for configuration.
  Options:
              -c     remove all bootstrap artifacts
              -h     show this help
EOF
}

main () {
  while getopts ch OPT; do
    case "$OPT" in
      c)
        echo "cleaning bootstrap artifacts"
        clean
        exit 0
        ;;
      h)
        help
        exit 0
        ;;
      \?)
        help
        exit 1
        ;;
    esac
  done

  echo "checking requirements"
  requirements
  echo "bootstrapping the project"
  generate
}

main $@

